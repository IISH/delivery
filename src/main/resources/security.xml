<!--

    Copyright (C) 2013 International Institute of Social History

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.3.xsd" default-autowire="byName">


  <http entry-point-ref="casEntryPoint">
    <custom-filter position="FORM_LOGIN_FILTER" ref="casFilter" />
    <custom-filter ref="requestLogoutFilter" before="LOGOUT_FILTER"/>
    <custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
  </http>



  <authentication-manager alias="authenticationManager">
    <authentication-provider ref="casAuthenticationProvider"/>
  </authentication-manager>

  <beans:bean id="casFilter"
      class="org.springframework.security.cas.web.CasAuthenticationFilter">
    <beans:property name="filterProcessesUrl" value="/user/validate" />
    <beans:property name="authenticationManager" ref="authenticationManager"/>
  </beans:bean>

  <beans:bean id="casEntryPoint"
    class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
    <beans:property name="loginUrl" value="${prop_casUrl}/login"/>
    <beans:property name="serviceProperties" ref="serviceProperties"/>
  </beans:bean>

    <beans:bean id="casAuthenticationProvider"
                class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService" />
        <beans:property name="serviceProperties" ref="serviceProperties" />
        <beans:property name="ticketValidator"
                        ref="userAddingServiceTicketValidator" />
        <beans:property name="key" value="unique-id-for-this-provider-cas" />
    </beans:bean>

    <beans:bean id="userAddingServiceTicketValidator"
                class="org.socialhistoryservices.delivery.user.controller.UserAddingServiceTicketValidator">
        <beans:constructor-arg index="0" value="${prop_casUrl}" />
        <beans:property name="userService" ref="userDetailsService"/>
    </beans:bean>

    <beans:bean id="userDetailsService"
      class="org.socialhistoryservices.delivery.user.service.UserServiceImpl">
      <beans:property name="userDAO" ref="userDAOBean"/>
      <beans:property name="groupDAO" ref="groupDAOBean"/>
  </beans:bean>

  <beans:bean id="groupDAOBean" class="org.socialhistoryservices.delivery.user.dao.GroupDAOImpl" />
  <beans:bean id="userDAOBean" class="org.socialhistoryservices.delivery.user.dao.UserDAOImpl" />

  <beans:bean id="serviceProperties"
        class="org.springframework.security.cas.ServiceProperties">
    <beans:property name="service"
        value="${prop_urlSelf}/user/validate"/>
    <beans:property name="sendRenew" value="false"/>
  </beans:bean>

   <!-- This filter handles a Single Logout Request from the CAS Server -->
  <beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>



  <!-- This filter logs out the user -->
  <beans:bean id="requestLogoutFilter"
        class="org.springframework.security.web.authentication.logout.LogoutFilter">
    <beans:constructor-arg value="/user/logout-success"/>
    <beans:constructor-arg>
      <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
    </beans:constructor-arg>
    <beans:property name="filterProcessesUrl"
               value="/user/logout"/>
  </beans:bean>

    <beans:bean id="reCaptcha" class="net.tanesha.recaptcha.ReCaptchaImpl">
        <beans:property name="privateKey" value="${prop_reCaptchaPrivateKey}" />
        <beans:property name="publicKey" value="${prop_reCaptchaPublicKey}" />
        <beans:property name="includeNoscript" value="false" />
    </beans:bean>

</beans:beans>